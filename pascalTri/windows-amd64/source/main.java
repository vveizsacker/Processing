/* autogenerated by Processing revision 1283 on 2023-02-01 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class main extends PApplet {

int cellSize = 50;
int n = 11;
float posX = 0;
float posY = 0;
 public void setup(){
  /* size commented out by preprocessor */;  
}

 public void draw(){
  background(0);
  createTri();
}
 public int fact(int x){
  int s = 1;
  for(int i = 1;i<=x;i++) 
    s *= i;
  return s;
}

 public void createTri(){
  for(int i = 0; i< n;i++)for(int j = 0; j<n;j++){
      if(i<=j){
        
      posX = (width - ((j)*cellSize)) / 2;
      //posY = height/2 - ((n-j-1)*cellSize)/2;
      posY = cellSize;
      
      CreateHex(i*cellSize + posX,j*cellSize + posY);
      int z = fact(j) / (fact(j-i) * fact(i));
      text(z,i*cellSize + posX,j * cellSize + posY);
      textSize(16);
      textAlign(CENTER,CENTER);
      fill(255);
      }
    
  }
}

 public void CreateHex(float x,float y){
  stroke(255);
  noFill();
  beginShape();
  for(float i = PI/6; i < TWO_PI;i+=TWO_PI/6){
    float hx = x + cos(i) * cellSize/2 ;
    float hy = y + sin(i) * cellSize/2 ;
    vertex(hx,hy);
  }
  
  endShape(CLOSE);
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "main" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
